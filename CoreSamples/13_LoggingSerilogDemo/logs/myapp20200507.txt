{"@t":"2020-05-07T14:41:27.1654028Z","@mt":"Starting web host"}
{"@t":"2020-05-07T14:41:28.1917461Z","@mt":"Hosting starting","@l":"Debug","EventId":{"Id":1},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-05-07T14:41:28.4962796Z","@mt":"Failed to locate the development https certificate at '{certificatePath}'.","@l":"Debug","certificatePath":null,"EventId":{"Id":2,"Name":"FailedToLocateDevelopmentCertificateFile"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-05-07T14:41:28.6254816Z","@mt":"Using development certificate: {certificateSubjectName} (Thumbprint: {certificateThumbprint})","@l":"Debug","certificateSubjectName":"CN=localhost","certificateThumbprint":"8019022701EE3F2383CAF07F693A6D709F50F973","EventId":{"Name":"LocatedDevelopmentCertificate"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer"}
{"@t":"2020-05-07T14:41:28.7037099Z","@mt":"Now listening on: {address}","address":"https://localhost:5001","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-05-07T14:41:28.7039195Z","@mt":"Now listening on: {address}","address":"http://localhost:5000","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-05-07T14:41:28.7045602Z","@mt":"Loaded hosting startup assembly {assemblyName}","@l":"Debug","assemblyName":"13_LoggingSerilogDemo","SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics"}
{"@t":"2020-05-07T14:41:28.7048641Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-05-07T14:41:28.7050298Z","@mt":"Hosting environment: {envName}","envName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-05-07T14:41:28.7052113Z","@mt":"Content root path: {contentRoot}","contentRoot":"E:\\StydyDemos\\Samples\\CoreSamples\\13_LoggingSerilogDemo","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2020-05-07T14:41:28.7054311Z","@mt":"Hosting started","@l":"Debug","EventId":{"Id":2},"SourceContext":"Microsoft.Extensions.Hosting.Internal.Host"}
{"@t":"2020-05-07T14:41:29.1408746Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HLVIIIT58PKR","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.1408746Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HLVIIIT58PKQ","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.1722949Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HLVIIIT58PKR","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.1723162Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HLVIIIT58PKQ","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.1740977Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HLVIIIT58PKR","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.1750845Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HLVIIIT58PKQ","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.2241364Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HLVIIIT58PKQ"}
{"@t":"2020-05-07T14:41:29.2241090Z","@mt":"Failed to authenticate HTTPS connection.","@l":"Debug","@x":"System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n   at System.Net.Security.SslStream.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslStream.ProcessAuthentication(LazyAsyncResult lazyResult, CancellationToken cancellationToken)\r\n   at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__69_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n   at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n   at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.InnerOnConnectionAsync(ConnectionContext context)","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware","ConnectionId":"0HLVIIIT58PKR"}
{"@t":"2020-05-07T14:41:29.3482248Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HLVIIIT58PKR","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.3482248Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HLVIIIT58PKQ","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.3557210Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HLVIIIT58PKR","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.3557245Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HLVIIIT58PKQ","Reason":"The Socket transport's send loop completed gracefully.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.4613556Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.4619607Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.4626087Z","@mt":"Connection id \"{ConnectionId}\" accepted.","@l":"Debug","ConnectionId":"0HLVIIIT58PKT","EventId":{"Id":39,"Name":"ConnectionAccepted"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.4687506Z","@mt":"Connection id \"{ConnectionId}\" started.","@l":"Debug","ConnectionId":"0HLVIIIT58PKT","EventId":{"Id":1,"Name":"ConnectionStart"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.5344807Z","@mt":"Connection id \"{ConnectionId}\" received FIN.","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","EventId":{"Id":6,"Name":"ConnectionReadFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.5503500Z","@mt":"Connection id \"{ConnectionId}\" is closed. The last processed stream ID was {HighestOpenedStreamId}.","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","HighestOpenedStreamId":0,"EventId":{"Id":36,"Name":"Http2ConnectionClosed"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.5511277Z","@mt":"Connection id \"{ConnectionId}\" sending FIN because: \"{Reason}\"","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","Reason":"The client closed the connection.","EventId":{"Id":7,"Name":"ConnectionWriteFin"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets"}
{"@t":"2020-05-07T14:41:29.5582805Z","@mt":"Connection id \"{ConnectionId}\" stopped.","@l":"Debug","ConnectionId":"0HLVIIIT58PKS","EventId":{"Id":2,"Name":"ConnectionStop"},"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
{"@t":"2020-05-07T14:41:29.5867513Z","@mt":"{HostingRequestStartingLog:l}","@r":["Request starting HTTP/2 GET https://localhost:5001/weatherforecast  "],"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5001","PathBase":"","Path":"/weatherforecast","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:5001/weatherforecast  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.5946496Z","@mt":"Wildcard detected, all requests with hosts will be allowed.","@l":"Debug","EventId":{"Name":"WildcardDetected"},"SourceContext":"Microsoft.AspNetCore.HostFiltering.HostFilteringMiddleware","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.6232014Z","@mt":"{CandidateCount} candidate(s) found for the request path '{Path}'","@l":"Debug","CandidateCount":1,"Path":"/weatherforecast","EventId":{"Id":1001,"Name":"CandidatesFound"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.6270241Z","@mt":"Endpoint '{Endpoint}' with route pattern '{RoutePattern}' is valid for the request path '{Path}'","@l":"Debug","Endpoint":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RoutePattern":"WeatherForecast","Path":"/weatherforecast","EventId":{"Id":1005,"Name":"CandiateValid"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.6285768Z","@mt":"Request matched endpoint '{EndpointName}'","@l":"Debug","EndpointName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","EventId":{"Id":1,"Name":"MatchSuccess"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.6310578Z","@mt":"Executing endpoint '{EndpointName}'","EndpointName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.6413398Z","@mt":"Registered model binder providers, in the following order: {ModelBinderProviders}","@l":"Debug","ModelBinderProviders":["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinderProvider"],"EventId":{"Id":12,"Name":"RegisteredModelBinderProviders"},"SourceContext":"Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7599275Z","@mt":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","RouteData":"{action = \"Get\", controller = \"WeatherForecast\"}","MethodInfo":"System.Collections.Generic.IEnumerable`1[_13_LoggingSerilogDemo.WeatherForecast] Get()","Controller":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"13_LoggingSerilogDemo","EventId":{"Id":3,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7648303Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"authorization","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7659176Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"resource","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7673131Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"action","Filters":["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7698023Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"exception","Filters":["None"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7738679Z","@mt":"Execution plan of {FilterType} filters (in the following order): {Filters}","@l":"Debug","FilterType":"result","Filters":["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"],"EventId":{"Id":1,"Name":"FilterExecutionPlan"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7760920Z","@mt":"Executing controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"13_LoggingSerilogDemo","EventId":{"Id":1,"Name":"ControllerFactoryExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7799537Z","@mt":"Executed controller factory for controller {Controller} ({AssemblyName})","@l":"Debug","Controller":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController","AssemblyName":"13_LoggingSerilogDemo","EventId":{"Id":2,"Name":"ControllerFactoryExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7867064Z","@mt":"List of registered output formatters, in the following order: {OutputFormatters}","@l":"Debug","OutputFormatters":["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"],"EventId":{"Id":11,"Name":"RegisteredOutputFormatters"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7919508Z","@mt":"No information found on request to perform content negotiation.","@l":"Debug","EventId":{"Id":4,"Name":"NoAcceptForNegotiation"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7946210Z","@mt":"Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.","@l":"Debug","EventId":{"Id":8,"Name":"SelectingOutputFormatterWithoutUsingContentTypes"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7958907Z","@mt":"Attempting to select the first formatter in the output formatters list which can write the result.","@l":"Debug","EventId":{"Id":10,"Name":"SelectingFirstCanWriteFormatter"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7975238Z","@mt":"Selected output formatter '{OutputFormatter}' and content type '{ContentType}' to write the response.","@l":"Debug","OutputFormatter":"Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter","ContentType":"application/json","EventId":{"Id":2,"Name":"FormatterSelected"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.7994295Z","@mt":"Executing ObjectResult, writing value of type '{Type}'.","Type":"_13_LoggingSerilogDemo.WeatherForecast[]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.8195705Z","@mt":"Executed action {ActionName} in {ElapsedMilliseconds}ms","ActionName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","ElapsedMilliseconds":40.554,"EventId":{"Id":2,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"56043baa-ced8-4604-91aa-1066ca2a32b2","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.8232292Z","@mt":"Executed endpoint '{EndpointName}'","EndpointName":"_13_LoggingSerilogDemo.Controllers.WeatherForecastController.Get (13_LoggingSerilogDemo)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:29.8278561Z","@mt":"{HostingRequestFinishedLog:l}","@r":["Request finished in 243.1888ms 200 application/json; charset=utf-8"],"ElapsedMilliseconds":243.1888,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 243.1888ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HLVIIIT58PKT:00000001","RequestPath":"/weatherforecast","SpanId":"|35b4a4f4-4186a946ca193607.","TraceId":"35b4a4f4-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:30.2716946Z","@mt":"{HostingRequestStartingLog:l}","@r":["Request starting HTTP/2 GET https://localhost:5001/favicon.ico  "],"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5001","PathBase":"","Path":"/favicon.ico","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:5001/favicon.ico  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HLVIIIT58PKT:00000003","RequestPath":"/favicon.ico","SpanId":"|35b4a4f5-4186a946ca193607.","TraceId":"35b4a4f5-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:30.2754516Z","@mt":"No candidates found for the request path '{Path}'","@l":"Debug","Path":"/favicon.ico","EventId":{"Id":1000,"Name":"CandidatesNotFound"},"SourceContext":"Microsoft.AspNetCore.Routing.Matching.DfaMatcher","RequestId":"0HLVIIIT58PKT:00000003","RequestPath":"/favicon.ico","SpanId":"|35b4a4f5-4186a946ca193607.","TraceId":"35b4a4f5-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:30.2761453Z","@mt":"Request did not match any endpoints","@l":"Debug","EventId":{"Id":2,"Name":"MatchFailure"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware","RequestId":"0HLVIIIT58PKT:00000003","RequestPath":"/favicon.ico","SpanId":"|35b4a4f5-4186a946ca193607.","TraceId":"35b4a4f5-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:41:30.2774641Z","@mt":"{HostingRequestFinishedLog:l}","@r":["Request finished in 5.9348ms 404 "],"ElapsedMilliseconds":5.9348,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.9348ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HLVIIIT58PKT:00000003","RequestPath":"/favicon.ico","SpanId":"|35b4a4f5-4186a946ca193607.","TraceId":"35b4a4f5-4186a946ca193607","ParentId":""}
{"@t":"2020-05-07T14:44:24.3972247Z","@mt":"Starting web host"}
{"@t":"2020-05-07T14:45:20.7772709Z","@mt":"Starting web host"}
